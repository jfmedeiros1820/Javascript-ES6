{"version":3,"sources":["../../app-es6/helpers/DataHelper.js"],"names":["DataHelper","Error","texto","test","Date","split","map","item","indice","data","getDate","getMonth","getFullYear"],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;kCAAaA,U;AAET,sCAAc;AAAA;;AACV,0BAAM,IAAIC,KAAJ,CAAU,qCAAV,CAAN;AACH;;;;kDAEoBC,K,EAAO;AACxB,4BAAG,CAAC,oBAAoBC,IAApB,CAAyBD,KAAzB,CAAJ,EAAoC;AAChC,kCAAM,IAAID,KAAJ,CAAU,uCAAV,CAAN;AACH;AACD,kEAAWG,IAAX,mCAAmBF,MAAMG,KAAN,CAAY,GAAZ,EAAiBC,GAAjB,CAAqB,UAACC,IAAD,EAAOC,MAAP;AAAA,mCAAkBD,OAAOC,SAAS,CAAlC;AAAA,yBAArB,CAAnB;AACH;;;kDAEoBC,I,EAAM;AACvB,+BAAUA,KAAKC,OAAL,EAAV,UAA4BD,KAAKE,QAAL,KAAkB,CAA9C,UAAmDF,KAAKG,WAAL,EAAnD;AACH","file":"DataHelper.js","sourcesContent":["export class DataHelper {\n\n    constructor() {\n        throw new Error('DateHelper nÃ£o pode ser instanciada');\n    }\n\n    static textoParaData(texto) {\n        if(!/\\d{4}-\\d{2}-\\d{2}/.test(texto)){\n            throw new Error('Data deve estar no formato yyyy-mm-dd')\n        }\n        return new Date(...texto.split('-').map((item, indice) => item - indice % 2));\n    }\n\n    static dataParaTexto(data) {\n        return `${data.getDate()}/${data.getMonth() + 1}/${data.getFullYear()}`;\n    }\n}"]}