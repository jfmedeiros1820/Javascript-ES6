{"version":3,"sources":["../../app-es6/services/NegociacaoService.js"],"names":["HttpService","ConnectionFactory","NegociacaoDao","Negociacao","NegociacaoService","_http","Promise","all","obterNegociacoesDaSemana","obterNegociacoesDaSemanaAnterior","obterNegociacoesDaSemanaRetrasada","then","negociacoes","periodos","reduce","dados","periodo","concat","map","Date","dado","data","quantidade","valor","catch","Error","erro","get","objeto","console","log","negociacao","getConnection","connection","dao","adiciona","listaTodos","apagaTodos","listaAtual","obterNegociacoes","filter","some","isEquals","negociacaoExistente"],"mappings":"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","file":"NegociacaoService.js","sourcesContent":["import {HttpService} from './HttpService';\nimport {ConnectionFactory} from './ConnectionFactory';\nimport {NegociacaoDao} from '../dao/NegociacaoDao';\nimport {Negociacao} from '../models/Negociacao';\n\nexport class NegociacaoService {\n\n    /**\n     * 0: requisição ainda não iniciada'\n     * \n     * 1: conexão com o servidor estabelecida\n     * \n     * 2: requisição recebida\n     * \n     * 3: processando requisicao\n     * \n     * 4: requisição concluída e a resposta esta pronta'\n     */\n\n    constructor(){\n\n        this._http = new HttpService();\n    }\n\n    obterNegociacoes() {\n\n        return Promise.all([\n            this.obterNegociacoesDaSemana(),\n            this.obterNegociacoesDaSemanaAnterior(),\n            this.obterNegociacoesDaSemanaRetrasada()\n        ]).then(periodos => {\n\n            let negociacoes = periodos\n                .reduce((dados, periodo) => dados.concat(periodo), [])\n                .map(dado => new Negociacao(new Date(dado.data), dado.quantidade, dado.valor ));\n\n            return negociacoes;\n        }).catch(erro => {\n            throw new Error(erro);\n        });\n\n    } \n\n    obterNegociacoesDaSemana(){\n\n        return this._http.get('/negociacoes/semana')\n            .then(negociacoes => negociacoes.map(objeto => new Negociacao(new Date(objeto.data), objeto.quantidade, objeto.valor)))\n            .catch(erro => {\n                console.log(erro);\n                throw new Error('Não foi possível obter as negociações da semana.');\n            });\n    }\n\n    obterNegociacoesDaSemanaAnterior(){\n\n        return this._http.get('/negociacoes/anterior')\n            .then(negociacoes => negociacoes.map(objeto => new Negociacao(new Date(objeto.data), objeto.quantidade, objeto.valor)))\n            .catch(erro => {\n                console.log(erro);\n                throw new Error('Não foi possível obter as negociações da anterior.');\n            });\n    }\n\n    obterNegociacoesDaSemanaRetrasada(){\n        \n        return this._http.get('/negociacoes/retrasada')\n            .then(negociacoes => negociacoes.map(objeto => new Negociacao(new Date(objeto.data), objeto.quantidade, objeto.valor)))\n            .catch(erro => {\n                console.log(erro);\n                throw new Error('Não foi possível obter as negociações da retrasada.');\n            });\n\n    }\n\n    cadastra(negociacao){\n        return ConnectionFactory\n            .getConnection()\n            .then(connection => new NegociacaoDao(connection))\n            .then(dao => dao.adiciona(negociacao))\n            .then(() => 'Negociação adicionada com sucesso')\n            .catch(erro => {\n                console.log(erro);\n                throw new Error('Não foi possível adicionar negociação')\n            } );\n    }\n\n    lista(){\n        return ConnectionFactory\n            .getConnection()\n            .then(connection => new NegociacaoDao(connection))\n            .then(dao => dao.listaTodos())\n            .catch(erro => {\n                console.log(erro);\n                throw new Error('Não foi possível obter as negociações');\n            });\n    }\n\n    apaga(){\n        return ConnectionFactory\n            .getConnection()\n            .then(connection => new NegociacaoDao(connection))\n            .then(dao => dao.apagaTodos())\n            .then(() => 'Negociações apagadas com sucesso')\n            .catch(erro => {\n                console.log(erro);\n                throw new Error('Não foi possível apagar as negociações')    \n            });\n    }\n\n    importa(listaAtual){\n        return this.obterNegociacoes()\n            .then(negociacoes => \n                negociacoes.filter(negociacao => \n                    !listaAtual.some(negociacaoExistente => \n                        negociacao.isEquals(negociacaoExistente))))\n            .catch(erro => {\n                console.log(erro);\n                throw new Error('Não foi possível buscar negociações para importar');    \n            });\n    }\n}"]}